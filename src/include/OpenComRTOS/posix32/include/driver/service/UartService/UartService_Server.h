/*******************************************************************************
 * OpenComRTOS
 * Copyright Altreonic NV, 2005-2013
 * www.Altreonic.com
 * Module name: UART_Server.h ($Path/$Filename)
 * Synopsis: Uart-Service Server.
 *
 * $LastChangedDate: 2013-02-04 21:34:15 +0100 (Mon, 04 Feb 2013) $
 * $Revision: 3384 $
 * $LastChangedBy: bernhard.sputh $
 *******************************************************************************/

#ifndef _UART_SERVER_
#define _UART_SERVER_

#include <L1_types.h>
#include <L1_api.h>
#include <L1_hal_types.h>
#include <L1_types.h>
#include <driver/class/L1_Drv_Uart.h>
#include <driver/service/UartService/UartService_Types.h>
#include <driver/service/UartService/UartService_Protocol.h>

/**
 * The main structure the Server uses for handling the FPGA UART Device
 */
typedef struct
{
    /**
     * Pointer to the "L1_Drv_UART" which represents the underlying device..
     */
    L1_Drv_UART * uart;

    /**
     * Number of the UART-Port to use, if needed by the underlying UART driver (Exar for instance). If not used this must be set to 0
     */
    L1_UINT8 portNumber;

    /**
     * The ID of the Input-Port-Hub.
     */
    L1_HubID inputPort;

    /**
     * The ID of the Output-Port-Hub.
     */
    L1_HubID outputPort;

    /**
     * The ID of the Output-Port for RX-Operations.
     */
    L1_HubID rxOutputPort;

    /**
     * The ID of the Output-Port for TX-Operations.
     */
    L1_HubID txOutputPort;

    /**
     * Pointer to the events that the UART ISR can issue. These are used by the client side.
     */
    L1_UartEvents * uartEvents;

    /**
     * The communication's complete configuration, generated by the codegens. Must not be NULL!
     */
    L1_Drv_Uart_portConfig * pPortConfig;
	/**
	 * Used to interface to the UART-Driver.
	 */
    L1_Drv_UART_Channel channel;
    /**
     * Boolean value for keeping the track of the channel's TX status.
     */
    L1_BOOL txIsOpen;
    /**
     * Boolean value for keeping the track of the channel's RX status.
     */
    L1_BOOL rxIsOpen;

}UartService_Server;

/**
* This function represents the Server Task.
*
* @param Arguments - Pointer to a structure of type UART_Server.
* @return None
*/

void UartService_Server_EntryPoint(L1_TaskArguments Arguments);

#endif
